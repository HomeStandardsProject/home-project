// This code is autogenerated. Do not modify manually.
export type Maybe<T> = T;
export type InputMaybe<T> = T;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /**
   * A date-time string at UTC, such as 2007-12-03T10:15:30Z,
   *     compliant with the 'date-time' format outlined in section 5.6 of
   *     the RFC 3339 profile of the ISO 8601 standard for representation
   *     of dates and times using the Gregorian calendar.
   */
  DateTime: any;
  /** The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`. */
  Dimension: any;
  /** The 'HexColor' type represents color in `rgb:ffffff` string format. */
  HexColor: any;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: any;
  /** The 'Quality' type represents quality as whole numeric values between `1` and `100`. */
  Quality: any;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAsset = {
  __typename?: "Asset";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  title?: Maybe<Scalars["String"]>;
  description?: Maybe<Scalars["String"]>;
  contentType?: Maybe<Scalars["String"]>;
  fileName?: Maybe<Scalars["String"]>;
  size?: Maybe<Scalars["Int"]>;
  url?: Maybe<Scalars["String"]>;
  width?: Maybe<Scalars["Int"]>;
  height?: Maybe<Scalars["Int"]>;
  linkedFrom?: Maybe<GraphQLContentfulAssetLinkingCollections>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetContentTypeArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetFileNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetSizeArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetUrlArgs = {
  transform?: InputMaybe<GraphQLContentfulImageTransformOptions>;
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetWidthArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetHeightArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Represents a binary file in a space. An asset can be any file type. */
export type GraphQLContentfulAssetLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type GraphQLContentfulAssetCollection = {
  __typename?: "AssetCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulAssetFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description?: InputMaybe<Scalars["String"]>;
  description_not?: InputMaybe<Scalars["String"]>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  url_exists?: InputMaybe<Scalars["Boolean"]>;
  url?: InputMaybe<Scalars["String"]>;
  url_not?: InputMaybe<Scalars["String"]>;
  url_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  url_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  url_contains?: InputMaybe<Scalars["String"]>;
  url_not_contains?: InputMaybe<Scalars["String"]>;
  size_exists?: InputMaybe<Scalars["Boolean"]>;
  size?: InputMaybe<Scalars["Int"]>;
  size_not?: InputMaybe<Scalars["Int"]>;
  size_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  size_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  size_gt?: InputMaybe<Scalars["Int"]>;
  size_gte?: InputMaybe<Scalars["Int"]>;
  size_lt?: InputMaybe<Scalars["Int"]>;
  size_lte?: InputMaybe<Scalars["Int"]>;
  contentType_exists?: InputMaybe<Scalars["Boolean"]>;
  contentType?: InputMaybe<Scalars["String"]>;
  contentType_not?: InputMaybe<Scalars["String"]>;
  contentType_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  contentType_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  contentType_contains?: InputMaybe<Scalars["String"]>;
  contentType_not_contains?: InputMaybe<Scalars["String"]>;
  fileName_exists?: InputMaybe<Scalars["Boolean"]>;
  fileName?: InputMaybe<Scalars["String"]>;
  fileName_not?: InputMaybe<Scalars["String"]>;
  fileName_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  fileName_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  fileName_contains?: InputMaybe<Scalars["String"]>;
  fileName_not_contains?: InputMaybe<Scalars["String"]>;
  width_exists?: InputMaybe<Scalars["Boolean"]>;
  width?: InputMaybe<Scalars["Int"]>;
  width_not?: InputMaybe<Scalars["Int"]>;
  width_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  width_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  width_gt?: InputMaybe<Scalars["Int"]>;
  width_gte?: InputMaybe<Scalars["Int"]>;
  width_lt?: InputMaybe<Scalars["Int"]>;
  width_lte?: InputMaybe<Scalars["Int"]>;
  height_exists?: InputMaybe<Scalars["Boolean"]>;
  height?: InputMaybe<Scalars["Int"]>;
  height_not?: InputMaybe<Scalars["Int"]>;
  height_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  height_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  height_gt?: InputMaybe<Scalars["Int"]>;
  height_gte?: InputMaybe<Scalars["Int"]>;
  height_lt?: InputMaybe<Scalars["Int"]>;
  height_lte?: InputMaybe<Scalars["Int"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulAssetFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulAssetFilter>>>;
};

export type GraphQLContentfulAssetLinkingCollections = {
  __typename?: "AssetLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
  blogPostCollection?: Maybe<GraphQLContentfulBlogPostCollection>;
  landingFactCollection?: Maybe<GraphQLContentfulLandingFactCollection>;
};

export type GraphQLContentfulAssetLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulAssetLinkingCollectionsBlogPostCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulAssetLinkingCollectionsLandingFactCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulAssetOrder =
  | "url_ASC"
  | "url_DESC"
  | "size_ASC"
  | "size_DESC"
  | "contentType_ASC"
  | "contentType_DESC"
  | "fileName_ASC"
  | "fileName_DESC"
  | "width_ASC"
  | "width_DESC"
  | "height_ASC"
  | "height_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPost = GraphQLContentfulEntry & {
  __typename?: "BlogPost";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulBlogPostLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  image?: Maybe<GraphQLContentfulAsset>;
  path?: Maybe<Scalars["String"]>;
  author?: Maybe<Scalars["String"]>;
  description?: Maybe<GraphQLContentfulBlogPostDescription>;
  tags?: Maybe<Array<Maybe<Scalars["String"]>>>;
  pinned?: Maybe<Scalars["Boolean"]>;
  externalUrl?: Maybe<Scalars["String"]>;
  seoDescription?: Maybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostImageArgs = {
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostPathArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostAuthorArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostTagsArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostPinnedArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostExternalUrlArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/blogPost) */
export type GraphQLContentfulBlogPostSeoDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulBlogPostCollection = {
  __typename?: "BlogPostCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulBlogPost>>;
};

export type GraphQLContentfulBlogPostDescription = {
  __typename?: "BlogPostDescription";
  json: Scalars["JSON"];
  links: GraphQLContentfulBlogPostDescriptionLinks;
};

export type GraphQLContentfulBlogPostDescriptionAssets = {
  __typename?: "BlogPostDescriptionAssets";
  hyperlink: Array<Maybe<GraphQLContentfulAsset>>;
  block: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulBlogPostDescriptionEntries = {
  __typename?: "BlogPostDescriptionEntries";
  inline: Array<Maybe<GraphQLContentfulEntry>>;
  hyperlink: Array<Maybe<GraphQLContentfulEntry>>;
  block: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulBlogPostDescriptionLinks = {
  __typename?: "BlogPostDescriptionLinks";
  entries: GraphQLContentfulBlogPostDescriptionEntries;
  assets: GraphQLContentfulBlogPostDescriptionAssets;
  resources: GraphQLContentfulBlogPostDescriptionResources;
};

export type GraphQLContentfulBlogPostDescriptionResources = {
  __typename?: "BlogPostDescriptionResources";
  block: Array<GraphQLContentfulResourceLink>;
  inline: Array<GraphQLContentfulResourceLink>;
  hyperlink: Array<GraphQLContentfulResourceLink>;
};

export type GraphQLContentfulBlogPostFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  image_exists?: InputMaybe<Scalars["Boolean"]>;
  path_exists?: InputMaybe<Scalars["Boolean"]>;
  path?: InputMaybe<Scalars["String"]>;
  path_not?: InputMaybe<Scalars["String"]>;
  path_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  path_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  path_contains?: InputMaybe<Scalars["String"]>;
  path_not_contains?: InputMaybe<Scalars["String"]>;
  author_exists?: InputMaybe<Scalars["Boolean"]>;
  author?: InputMaybe<Scalars["String"]>;
  author_not?: InputMaybe<Scalars["String"]>;
  author_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  author_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  author_contains?: InputMaybe<Scalars["String"]>;
  author_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  tags_exists?: InputMaybe<Scalars["Boolean"]>;
  tags_contains_all?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  tags_contains_some?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  tags_contains_none?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  pinned_exists?: InputMaybe<Scalars["Boolean"]>;
  pinned?: InputMaybe<Scalars["Boolean"]>;
  pinned_not?: InputMaybe<Scalars["Boolean"]>;
  externalUrl_exists?: InputMaybe<Scalars["Boolean"]>;
  externalUrl?: InputMaybe<Scalars["String"]>;
  externalUrl_not?: InputMaybe<Scalars["String"]>;
  externalUrl_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  externalUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  externalUrl_contains?: InputMaybe<Scalars["String"]>;
  externalUrl_not_contains?: InputMaybe<Scalars["String"]>;
  seoDescription_exists?: InputMaybe<Scalars["Boolean"]>;
  seoDescription?: InputMaybe<Scalars["String"]>;
  seoDescription_not?: InputMaybe<Scalars["String"]>;
  seoDescription_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  seoDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  seoDescription_contains?: InputMaybe<Scalars["String"]>;
  seoDescription_not_contains?: InputMaybe<Scalars["String"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulBlogPostFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulBlogPostFilter>>>;
};

export type GraphQLContentfulBlogPostLinkingCollections = {
  __typename?: "BlogPostLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulBlogPostLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulBlogPostOrder =
  | "title_ASC"
  | "title_DESC"
  | "path_ASC"
  | "path_DESC"
  | "author_ASC"
  | "author_DESC"
  | "pinned_ASC"
  | "pinned_DESC"
  | "externalUrl_ASC"
  | "externalUrl_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCity = GraphQLContentfulEntry & {
  __typename?: "City";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulCityLinkingCollections>;
  name?: Maybe<Scalars["String"]>;
  landlordsCollection?: Maybe<GraphQLContentfulCityLandlordsCollection>;
  biasLat?: Maybe<Scalars["Float"]>;
  biasLong?: Maybe<Scalars["Float"]>;
  biasRadius?: Maybe<Scalars["Float"]>;
  questions?: Maybe<Scalars["JSON"]>;
  bylawMultiplexer?: Maybe<Scalars["JSON"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityLandlordsCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityBiasLatArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityBiasLongArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityBiasRadiusArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityQuestionsArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/city) */
export type GraphQLContentfulCityBylawMultiplexerArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulCityCollection = {
  __typename?: "CityCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulCity>>;
};

export type GraphQLContentfulCityFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  name_exists?: InputMaybe<Scalars["Boolean"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_not?: InputMaybe<Scalars["String"]>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_contains?: InputMaybe<Scalars["String"]>;
  name_not_contains?: InputMaybe<Scalars["String"]>;
  landlordsCollection_exists?: InputMaybe<Scalars["Boolean"]>;
  biasLat_exists?: InputMaybe<Scalars["Boolean"]>;
  biasLat?: InputMaybe<Scalars["Float"]>;
  biasLat_not?: InputMaybe<Scalars["Float"]>;
  biasLat_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasLat_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasLat_gt?: InputMaybe<Scalars["Float"]>;
  biasLat_gte?: InputMaybe<Scalars["Float"]>;
  biasLat_lt?: InputMaybe<Scalars["Float"]>;
  biasLat_lte?: InputMaybe<Scalars["Float"]>;
  biasLong_exists?: InputMaybe<Scalars["Boolean"]>;
  biasLong?: InputMaybe<Scalars["Float"]>;
  biasLong_not?: InputMaybe<Scalars["Float"]>;
  biasLong_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasLong_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasLong_gt?: InputMaybe<Scalars["Float"]>;
  biasLong_gte?: InputMaybe<Scalars["Float"]>;
  biasLong_lt?: InputMaybe<Scalars["Float"]>;
  biasLong_lte?: InputMaybe<Scalars["Float"]>;
  biasRadius_exists?: InputMaybe<Scalars["Boolean"]>;
  biasRadius?: InputMaybe<Scalars["Float"]>;
  biasRadius_not?: InputMaybe<Scalars["Float"]>;
  biasRadius_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasRadius_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  biasRadius_gt?: InputMaybe<Scalars["Float"]>;
  biasRadius_gte?: InputMaybe<Scalars["Float"]>;
  biasRadius_lt?: InputMaybe<Scalars["Float"]>;
  biasRadius_lte?: InputMaybe<Scalars["Float"]>;
  questions_exists?: InputMaybe<Scalars["Boolean"]>;
  bylawMultiplexer_exists?: InputMaybe<Scalars["Boolean"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulCityFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulCityFilter>>>;
};

export type GraphQLContentfulCityLandlordsCollection = {
  __typename?: "CityLandlordsCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulCityLinkingCollections = {
  __typename?: "CityLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulCityLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulCityOrder =
  | "name_ASC"
  | "name_DESC"
  | "biasLat_ASC"
  | "biasLat_DESC"
  | "biasLong_ASC"
  | "biasLong_DESC"
  | "biasRadius_ASC"
  | "biasRadius_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulContentfulMetadata = {
  __typename?: "ContentfulMetadata";
  tags: Array<Maybe<GraphQLContentfulContentfulTag>>;
};

export type GraphQLContentfulContentfulMetadataFilter = {
  tags_exists?: InputMaybe<Scalars["Boolean"]>;
  tags?: InputMaybe<GraphQLContentfulContentfulMetadataTagsFilter>;
};

export type GraphQLContentfulContentfulMetadataTagsFilter = {
  id_contains_all?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  id_contains_some?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  id_contains_none?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/**
 * Represents a tag entity for finding and organizing content easily.
 *     Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
 */
export type GraphQLContentfulContentfulTag = {
  __typename?: "ContentfulTag";
  id?: Maybe<Scalars["String"]>;
  name?: Maybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnow = GraphQLContentfulEntry & {
  __typename?: "DidYouKnow";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulDidYouKnowLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  description?: Maybe<Scalars["String"]>;
  sourceName?: Maybe<Scalars["String"]>;
  sourceUrl?: Maybe<Scalars["String"]>;
  order?: Maybe<Scalars["Int"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowSourceNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowSourceUrlArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/didYouKnow) */
export type GraphQLContentfulDidYouKnowOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulDidYouKnowCollection = {
  __typename?: "DidYouKnowCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulDidYouKnow>>;
};

export type GraphQLContentfulDidYouKnowFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description?: InputMaybe<Scalars["String"]>;
  description_not?: InputMaybe<Scalars["String"]>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  sourceName_exists?: InputMaybe<Scalars["Boolean"]>;
  sourceName?: InputMaybe<Scalars["String"]>;
  sourceName_not?: InputMaybe<Scalars["String"]>;
  sourceName_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceName_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceName_contains?: InputMaybe<Scalars["String"]>;
  sourceName_not_contains?: InputMaybe<Scalars["String"]>;
  sourceUrl_exists?: InputMaybe<Scalars["Boolean"]>;
  sourceUrl?: InputMaybe<Scalars["String"]>;
  sourceUrl_not?: InputMaybe<Scalars["String"]>;
  sourceUrl_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceUrl_contains?: InputMaybe<Scalars["String"]>;
  sourceUrl_not_contains?: InputMaybe<Scalars["String"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulDidYouKnowFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulDidYouKnowFilter>>>;
};

export type GraphQLContentfulDidYouKnowLinkingCollections = {
  __typename?: "DidYouKnowLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulDidYouKnowLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulDidYouKnowOrder =
  | "title_ASC"
  | "title_DESC"
  | "sourceName_ASC"
  | "sourceName_DESC"
  | "sourceUrl_ASC"
  | "sourceUrl_DESC"
  | "order_ASC"
  | "order_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulEntry = {
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
};

export type GraphQLContentfulEntryCollection = {
  __typename?: "EntryCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulEntryFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulEntryFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulEntryFilter>>>;
};

export type GraphQLContentfulEntryOrder =
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulImageFormat =
  /** JPG image format. */
  | "JPG"
  /**
   * Progressive JPG format stores multiple passes of an image in progressively higher detail.
   *         When a progressive image is loading, the viewer will first see a lower quality pixelated version which
   *         will gradually improve in detail, until the image is fully downloaded. This is to display an image as
   *         early as possible to make the layout look as designed.
   */
  | "JPG_PROGRESSIVE"
  /** PNG image format */
  | "PNG"
  /**
   * 8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
   *         The 8-bit PNG format is mostly used for simple images, such as icons or logos.
   */
  | "PNG8"
  /** WebP image format. */
  | "WEBP"
  | "AVIF";

export type GraphQLContentfulImageResizeFocus =
  /** Focus the resizing on the center. */
  | "CENTER"
  /** Focus the resizing on the top. */
  | "TOP"
  /** Focus the resizing on the top right. */
  | "TOP_RIGHT"
  /** Focus the resizing on the right. */
  | "RIGHT"
  /** Focus the resizing on the bottom right. */
  | "BOTTOM_RIGHT"
  /** Focus the resizing on the bottom. */
  | "BOTTOM"
  /** Focus the resizing on the bottom left. */
  | "BOTTOM_LEFT"
  /** Focus the resizing on the left. */
  | "LEFT"
  /** Focus the resizing on the top left. */
  | "TOP_LEFT"
  /** Focus the resizing on the largest face. */
  | "FACE"
  /** Focus the resizing on the area containing all the faces. */
  | "FACES";

export type GraphQLContentfulImageResizeStrategy =
  /** Resizes the image to fit into the specified dimensions. */
  | "FIT"
  /**
   * Resizes the image to the specified dimensions, padding the image if needed.
   *         Uses desired background color as padding color.
   */
  | "PAD"
  /** Resizes the image to the specified dimensions, cropping the image if needed. */
  | "FILL"
  /** Resizes the image to the specified dimensions, changing the original aspect ratio if needed. */
  | "SCALE"
  /** Crops a part of the original image to fit into the specified dimensions. */
  | "CROP"
  /** Creates a thumbnail from the image. */
  | "THUMB";

export type GraphQLContentfulImageTransformOptions = {
  /** Desired width in pixels. Defaults to the original image width. */
  width?: InputMaybe<Scalars["Dimension"]>;
  /** Desired height in pixels. Defaults to the original image height. */
  height?: InputMaybe<Scalars["Dimension"]>;
  /**
   * Desired quality of the image in percents.
   *         Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
   */
  quality?: InputMaybe<Scalars["Quality"]>;
  /**
   * Desired corner radius in pixels.
   *         Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
   *         Defaults to `0`. Uses desired background color as padding color,
   *         unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
   */
  cornerRadius?: InputMaybe<Scalars["Int"]>;
  /** Desired resize strategy. Defaults to `FIT`. */
  resizeStrategy?: InputMaybe<GraphQLContentfulImageResizeStrategy>;
  /** Desired resize focus area. Defaults to `CENTER`. */
  resizeFocus?: InputMaybe<GraphQLContentfulImageResizeFocus>;
  /**
   * Desired background color, used with corner radius or `PAD` resize strategy.
   *         Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
   */
  backgroundColor?: InputMaybe<Scalars["HexColor"]>;
  /** Desired image format. Defaults to the original image format. */
  format?: InputMaybe<GraphQLContentfulImageFormat>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanation = GraphQLContentfulEntry & {
  __typename?: "LandingExplanation";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulLandingExplanationLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  icon?: Maybe<Scalars["String"]>;
  description?: Maybe<GraphQLContentfulLandingExplanationDescription>;
  order?: Maybe<Scalars["Int"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanationLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanationTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanationIconArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanationDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingExplanation) */
export type GraphQLContentfulLandingExplanationOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingExplanationCollection = {
  __typename?: "LandingExplanationCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulLandingExplanation>>;
};

export type GraphQLContentfulLandingExplanationDescription = {
  __typename?: "LandingExplanationDescription";
  json: Scalars["JSON"];
  links: GraphQLContentfulLandingExplanationDescriptionLinks;
};

export type GraphQLContentfulLandingExplanationDescriptionAssets = {
  __typename?: "LandingExplanationDescriptionAssets";
  hyperlink: Array<Maybe<GraphQLContentfulAsset>>;
  block: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulLandingExplanationDescriptionEntries = {
  __typename?: "LandingExplanationDescriptionEntries";
  inline: Array<Maybe<GraphQLContentfulEntry>>;
  hyperlink: Array<Maybe<GraphQLContentfulEntry>>;
  block: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulLandingExplanationDescriptionLinks = {
  __typename?: "LandingExplanationDescriptionLinks";
  entries: GraphQLContentfulLandingExplanationDescriptionEntries;
  assets: GraphQLContentfulLandingExplanationDescriptionAssets;
  resources: GraphQLContentfulLandingExplanationDescriptionResources;
};

export type GraphQLContentfulLandingExplanationDescriptionResources = {
  __typename?: "LandingExplanationDescriptionResources";
  block: Array<GraphQLContentfulResourceLink>;
  inline: Array<GraphQLContentfulResourceLink>;
  hyperlink: Array<GraphQLContentfulResourceLink>;
};

export type GraphQLContentfulLandingExplanationFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  icon_exists?: InputMaybe<Scalars["Boolean"]>;
  icon?: InputMaybe<Scalars["String"]>;
  icon_not?: InputMaybe<Scalars["String"]>;
  icon_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  icon_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  icon_contains?: InputMaybe<Scalars["String"]>;
  icon_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingExplanationFilter>>>;
  AND?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulLandingExplanationFilter>>
  >;
};

export type GraphQLContentfulLandingExplanationLinkingCollections = {
  __typename?: "LandingExplanationLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulLandingExplanationLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingExplanationOrder =
  | "title_ASC"
  | "title_DESC"
  | "icon_ASC"
  | "icon_DESC"
  | "order_ASC"
  | "order_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFact = GraphQLContentfulEntry & {
  __typename?: "LandingFact";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulLandingFactLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  description?: Maybe<Scalars["String"]>;
  backgroundImage?: Maybe<GraphQLContentfulAsset>;
  order?: Maybe<Scalars["Int"]>;
  lightTextColor?: Maybe<Scalars["Boolean"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactBackgroundImageArgs = {
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingFact) */
export type GraphQLContentfulLandingFactLightTextColorArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingFactCollection = {
  __typename?: "LandingFactCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulLandingFact>>;
};

export type GraphQLContentfulLandingFactFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description?: InputMaybe<Scalars["String"]>;
  description_not?: InputMaybe<Scalars["String"]>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  backgroundImage_exists?: InputMaybe<Scalars["Boolean"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  lightTextColor_exists?: InputMaybe<Scalars["Boolean"]>;
  lightTextColor?: InputMaybe<Scalars["Boolean"]>;
  lightTextColor_not?: InputMaybe<Scalars["Boolean"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingFactFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingFactFilter>>>;
};

export type GraphQLContentfulLandingFactLinkingCollections = {
  __typename?: "LandingFactLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulLandingFactLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingFactOrder =
  | "title_ASC"
  | "title_DESC"
  | "description_ASC"
  | "description_DESC"
  | "order_ASC"
  | "order_DESC"
  | "lightTextColor_ASC"
  | "lightTextColor_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadata = GraphQLContentfulEntry & {
  __typename?: "LandingMetadata";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulLandingMetadataLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  description?: Maybe<GraphQLContentfulLandingMetadataDescription>;
  buttonStartNow?: Maybe<Scalars["String"]>;
  whyThisToolTitle?: Maybe<Scalars["String"]>;
  howWeHelpTitle?: Maybe<Scalars["String"]>;
  kitchenIntro?: Maybe<Scalars["String"]>;
  didYouKnowTitle?: Maybe<Scalars["String"]>;
  articleTitle?: Maybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataButtonStartNowArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataWhyThisToolTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataHowWeHelpTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataKitchenIntroArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataDidYouKnowTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landingMetadata) */
export type GraphQLContentfulLandingMetadataArticleTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingMetadataCollection = {
  __typename?: "LandingMetadataCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulLandingMetadata>>;
};

export type GraphQLContentfulLandingMetadataDescription = {
  __typename?: "LandingMetadataDescription";
  json: Scalars["JSON"];
  links: GraphQLContentfulLandingMetadataDescriptionLinks;
};

export type GraphQLContentfulLandingMetadataDescriptionAssets = {
  __typename?: "LandingMetadataDescriptionAssets";
  hyperlink: Array<Maybe<GraphQLContentfulAsset>>;
  block: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulLandingMetadataDescriptionEntries = {
  __typename?: "LandingMetadataDescriptionEntries";
  inline: Array<Maybe<GraphQLContentfulEntry>>;
  hyperlink: Array<Maybe<GraphQLContentfulEntry>>;
  block: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulLandingMetadataDescriptionLinks = {
  __typename?: "LandingMetadataDescriptionLinks";
  entries: GraphQLContentfulLandingMetadataDescriptionEntries;
  assets: GraphQLContentfulLandingMetadataDescriptionAssets;
  resources: GraphQLContentfulLandingMetadataDescriptionResources;
};

export type GraphQLContentfulLandingMetadataDescriptionResources = {
  __typename?: "LandingMetadataDescriptionResources";
  block: Array<GraphQLContentfulResourceLink>;
  inline: Array<GraphQLContentfulResourceLink>;
  hyperlink: Array<GraphQLContentfulResourceLink>;
};

export type GraphQLContentfulLandingMetadataFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  buttonStartNow_exists?: InputMaybe<Scalars["Boolean"]>;
  buttonStartNow?: InputMaybe<Scalars["String"]>;
  buttonStartNow_not?: InputMaybe<Scalars["String"]>;
  buttonStartNow_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  buttonStartNow_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  buttonStartNow_contains?: InputMaybe<Scalars["String"]>;
  buttonStartNow_not_contains?: InputMaybe<Scalars["String"]>;
  whyThisToolTitle_exists?: InputMaybe<Scalars["Boolean"]>;
  whyThisToolTitle?: InputMaybe<Scalars["String"]>;
  whyThisToolTitle_not?: InputMaybe<Scalars["String"]>;
  whyThisToolTitle_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  whyThisToolTitle_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  whyThisToolTitle_contains?: InputMaybe<Scalars["String"]>;
  whyThisToolTitle_not_contains?: InputMaybe<Scalars["String"]>;
  howWeHelpTitle_exists?: InputMaybe<Scalars["Boolean"]>;
  howWeHelpTitle?: InputMaybe<Scalars["String"]>;
  howWeHelpTitle_not?: InputMaybe<Scalars["String"]>;
  howWeHelpTitle_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  howWeHelpTitle_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  howWeHelpTitle_contains?: InputMaybe<Scalars["String"]>;
  howWeHelpTitle_not_contains?: InputMaybe<Scalars["String"]>;
  kitchenIntro_exists?: InputMaybe<Scalars["Boolean"]>;
  kitchenIntro?: InputMaybe<Scalars["String"]>;
  kitchenIntro_not?: InputMaybe<Scalars["String"]>;
  kitchenIntro_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  kitchenIntro_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  kitchenIntro_contains?: InputMaybe<Scalars["String"]>;
  kitchenIntro_not_contains?: InputMaybe<Scalars["String"]>;
  didYouKnowTitle_exists?: InputMaybe<Scalars["Boolean"]>;
  didYouKnowTitle?: InputMaybe<Scalars["String"]>;
  didYouKnowTitle_not?: InputMaybe<Scalars["String"]>;
  didYouKnowTitle_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  didYouKnowTitle_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  didYouKnowTitle_contains?: InputMaybe<Scalars["String"]>;
  didYouKnowTitle_not_contains?: InputMaybe<Scalars["String"]>;
  articleTitle_exists?: InputMaybe<Scalars["Boolean"]>;
  articleTitle?: InputMaybe<Scalars["String"]>;
  articleTitle_not?: InputMaybe<Scalars["String"]>;
  articleTitle_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  articleTitle_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  articleTitle_contains?: InputMaybe<Scalars["String"]>;
  articleTitle_not_contains?: InputMaybe<Scalars["String"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingMetadataFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingMetadataFilter>>>;
};

export type GraphQLContentfulLandingMetadataLinkingCollections = {
  __typename?: "LandingMetadataLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulLandingMetadataLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandingMetadataOrder =
  | "title_ASC"
  | "title_DESC"
  | "buttonStartNow_ASC"
  | "buttonStartNow_DESC"
  | "whyThisToolTitle_ASC"
  | "whyThisToolTitle_DESC"
  | "howWeHelpTitle_ASC"
  | "howWeHelpTitle_DESC"
  | "didYouKnowTitle_ASC"
  | "didYouKnowTitle_DESC"
  | "articleTitle_ASC"
  | "articleTitle_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landlord) */
export type GraphQLContentfulLandlord = GraphQLContentfulEntry & {
  __typename?: "Landlord";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulLandlordLinkingCollections>;
  name?: Maybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landlord) */
export type GraphQLContentfulLandlordLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/landlord) */
export type GraphQLContentfulLandlordNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandlordCollection = {
  __typename?: "LandlordCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulLandlord>>;
};

export type GraphQLContentfulLandlordFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  name_exists?: InputMaybe<Scalars["Boolean"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_not?: InputMaybe<Scalars["String"]>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_contains?: InputMaybe<Scalars["String"]>;
  name_not_contains?: InputMaybe<Scalars["String"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandlordFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandlordFilter>>>;
};

export type GraphQLContentfulLandlordLinkingCollections = {
  __typename?: "LandlordLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulLandlordLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulLandlordOrder =
  | "name_ASC"
  | "name_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolation = GraphQLContentfulEntry & {
  __typename?: "OfferingExampleViolation";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<
    GraphQLContentfulOfferingExampleViolationLinkingCollections
  >;
  title?: Maybe<Scalars["String"]>;
  description?: Maybe<Scalars["String"]>;
  violationReason?: Maybe<Scalars["String"]>;
  order?: Maybe<Scalars["Int"]>;
  markerTopPosition?: Maybe<Scalars["Float"]>;
  markerLeftPosition?: Maybe<Scalars["Float"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationViolationReasonArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationMarkerTopPositionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** Example violation for the how we help section [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/offeringExampleViolation) */
export type GraphQLContentfulOfferingExampleViolationMarkerLeftPositionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulOfferingExampleViolationCollection = {
  __typename?: "OfferingExampleViolationCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulOfferingExampleViolation>>;
};

export type GraphQLContentfulOfferingExampleViolationFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description?: InputMaybe<Scalars["String"]>;
  description_not?: InputMaybe<Scalars["String"]>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  violationReason_exists?: InputMaybe<Scalars["Boolean"]>;
  violationReason?: InputMaybe<Scalars["String"]>;
  violationReason_not?: InputMaybe<Scalars["String"]>;
  violationReason_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  violationReason_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  violationReason_contains?: InputMaybe<Scalars["String"]>;
  violationReason_not_contains?: InputMaybe<Scalars["String"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  markerTopPosition_exists?: InputMaybe<Scalars["Boolean"]>;
  markerTopPosition?: InputMaybe<Scalars["Float"]>;
  markerTopPosition_not?: InputMaybe<Scalars["Float"]>;
  markerTopPosition_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  markerTopPosition_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  markerTopPosition_gt?: InputMaybe<Scalars["Float"]>;
  markerTopPosition_gte?: InputMaybe<Scalars["Float"]>;
  markerTopPosition_lt?: InputMaybe<Scalars["Float"]>;
  markerTopPosition_lte?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_exists?: InputMaybe<Scalars["Boolean"]>;
  markerLeftPosition?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_not?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  markerLeftPosition_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  markerLeftPosition_gt?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_gte?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_lt?: InputMaybe<Scalars["Float"]>;
  markerLeftPosition_lte?: InputMaybe<Scalars["Float"]>;
  OR?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulOfferingExampleViolationFilter>>
  >;
  AND?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulOfferingExampleViolationFilter>>
  >;
};

export type GraphQLContentfulOfferingExampleViolationLinkingCollections = {
  __typename?: "OfferingExampleViolationLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulOfferingExampleViolationLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulOfferingExampleViolationOrder =
  | "title_ASC"
  | "title_DESC"
  | "violationReason_ASC"
  | "violationReason_DESC"
  | "order_ASC"
  | "order_DESC"
  | "markerTopPosition_ASC"
  | "markerTopPosition_DESC"
  | "markerLeftPosition_ASC"
  | "markerLeftPosition_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulQuery = {
  __typename?: "Query";
  asset?: Maybe<GraphQLContentfulAsset>;
  assetCollection?: Maybe<GraphQLContentfulAssetCollection>;
  text?: Maybe<GraphQLContentfulText>;
  textCollection?: Maybe<GraphQLContentfulTextCollection>;
  landlord?: Maybe<GraphQLContentfulLandlord>;
  landlordCollection?: Maybe<GraphQLContentfulLandlordCollection>;
  city?: Maybe<GraphQLContentfulCity>;
  cityCollection?: Maybe<GraphQLContentfulCityCollection>;
  blogPost?: Maybe<GraphQLContentfulBlogPost>;
  blogPostCollection?: Maybe<GraphQLContentfulBlogPostCollection>;
  richTextOnly?: Maybe<GraphQLContentfulRichTextOnly>;
  richTextOnlyCollection?: Maybe<GraphQLContentfulRichTextOnlyCollection>;
  resourcesAndContacts?: Maybe<GraphQLContentfulResourcesAndContacts>;
  resourcesAndContactsCollection?: Maybe<
    GraphQLContentfulResourcesAndContactsCollection
  >;
  offeringExampleViolation?: Maybe<GraphQLContentfulOfferingExampleViolation>;
  offeringExampleViolationCollection?: Maybe<
    GraphQLContentfulOfferingExampleViolationCollection
  >;
  landingFact?: Maybe<GraphQLContentfulLandingFact>;
  landingFactCollection?: Maybe<GraphQLContentfulLandingFactCollection>;
  landingMetadata?: Maybe<GraphQLContentfulLandingMetadata>;
  landingMetadataCollection?: Maybe<GraphQLContentfulLandingMetadataCollection>;
  relevantArticle?: Maybe<GraphQLContentfulRelevantArticle>;
  relevantArticleCollection?: Maybe<GraphQLContentfulRelevantArticleCollection>;
  didYouKnow?: Maybe<GraphQLContentfulDidYouKnow>;
  didYouKnowCollection?: Maybe<GraphQLContentfulDidYouKnowCollection>;
  landingExplanation?: Maybe<GraphQLContentfulLandingExplanation>;
  landingExplanationCollection?: Maybe<
    GraphQLContentfulLandingExplanationCollection
  >;
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
  _node?: Maybe<GraphQLContentful_Node>;
};

export type GraphQLContentfulQueryAssetArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryAssetCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulAssetFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulAssetOrder>>>;
};

export type GraphQLContentfulQueryTextArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryTextCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulTextFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulTextOrder>>>;
};

export type GraphQLContentfulQueryLandlordArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryLandlordCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulLandlordFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandlordOrder>>>;
};

export type GraphQLContentfulQueryCityArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryCityCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulCityFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulCityOrder>>>;
};

export type GraphQLContentfulQueryBlogPostArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryBlogPostCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulBlogPostFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulBlogPostOrder>>>;
};

export type GraphQLContentfulQueryRichTextOnlyArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryRichTextOnlyCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulRichTextOnlyFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulRichTextOnlyOrder>>>;
};

export type GraphQLContentfulQueryResourcesAndContactsArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryResourcesAndContactsCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulResourcesAndContactsFilter>;
  order?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulResourcesAndContactsOrder>>
  >;
};

export type GraphQLContentfulQueryOfferingExampleViolationArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryOfferingExampleViolationCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulOfferingExampleViolationFilter>;
  order?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulOfferingExampleViolationOrder>>
  >;
};

export type GraphQLContentfulQueryLandingFactArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryLandingFactCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulLandingFactFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingFactOrder>>>;
};

export type GraphQLContentfulQueryLandingMetadataArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryLandingMetadataCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulLandingMetadataFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulLandingMetadataOrder>>>;
};

export type GraphQLContentfulQueryRelevantArticleArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryRelevantArticleCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulRelevantArticleFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulRelevantArticleOrder>>>;
};

export type GraphQLContentfulQueryDidYouKnowArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryDidYouKnowCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulDidYouKnowFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulDidYouKnowOrder>>>;
};

export type GraphQLContentfulQueryLandingExplanationArgs = {
  id: Scalars["String"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulQueryLandingExplanationCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulLandingExplanationFilter>;
  order?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulLandingExplanationOrder>>
  >;
};

export type GraphQLContentfulQueryEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
  where?: InputMaybe<GraphQLContentfulEntryFilter>;
  order?: InputMaybe<Array<InputMaybe<GraphQLContentfulEntryOrder>>>;
};

export type GraphQLContentfulQuery_NodeArgs = {
  id: Scalars["ID"];
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticle = GraphQLContentfulEntry & {
  __typename?: "RelevantArticle";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulRelevantArticleLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  sourceName?: Maybe<Scalars["String"]>;
  sourceUrl?: Maybe<Scalars["String"]>;
  order?: Maybe<Scalars["Int"]>;
  previewImage?: Maybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticleLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticleTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticleSourceNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticleSourceUrlArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticleOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/relevantArticle) */
export type GraphQLContentfulRelevantArticlePreviewImageArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulRelevantArticleCollection = {
  __typename?: "RelevantArticleCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulRelevantArticle>>;
};

export type GraphQLContentfulRelevantArticleFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  sourceName_exists?: InputMaybe<Scalars["Boolean"]>;
  sourceName?: InputMaybe<Scalars["String"]>;
  sourceName_not?: InputMaybe<Scalars["String"]>;
  sourceName_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceName_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceName_contains?: InputMaybe<Scalars["String"]>;
  sourceName_not_contains?: InputMaybe<Scalars["String"]>;
  sourceUrl_exists?: InputMaybe<Scalars["Boolean"]>;
  sourceUrl?: InputMaybe<Scalars["String"]>;
  sourceUrl_not?: InputMaybe<Scalars["String"]>;
  sourceUrl_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  sourceUrl_contains?: InputMaybe<Scalars["String"]>;
  sourceUrl_not_contains?: InputMaybe<Scalars["String"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  previewImage_exists?: InputMaybe<Scalars["Boolean"]>;
  previewImage?: InputMaybe<Scalars["String"]>;
  previewImage_not?: InputMaybe<Scalars["String"]>;
  previewImage_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  previewImage_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  previewImage_contains?: InputMaybe<Scalars["String"]>;
  previewImage_not_contains?: InputMaybe<Scalars["String"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulRelevantArticleFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulRelevantArticleFilter>>>;
};

export type GraphQLContentfulRelevantArticleLinkingCollections = {
  __typename?: "RelevantArticleLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulRelevantArticleLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulRelevantArticleOrder =
  | "title_ASC"
  | "title_DESC"
  | "sourceName_ASC"
  | "sourceName_DESC"
  | "sourceUrl_ASC"
  | "sourceUrl_DESC"
  | "order_ASC"
  | "order_DESC"
  | "previewImage_ASC"
  | "previewImage_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulResourceLink = {
  __typename?: "ResourceLink";
  sys: GraphQLContentfulResourceSys;
};

export type GraphQLContentfulResourceSys = {
  __typename?: "ResourceSys";
  urn: Scalars["String"];
  type: Scalars["String"];
  linkType: Scalars["String"];
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContacts = GraphQLContentfulEntry & {
  __typename?: "ResourcesAndContacts";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulResourcesAndContactsLinkingCollections>;
  name?: Maybe<Scalars["String"]>;
  nameUrl?: Maybe<Scalars["String"]>;
  description?: Maybe<GraphQLContentfulResourcesAndContactsDescription>;
  email?: Maybe<Scalars["String"]>;
  phoneNumber?: Maybe<Scalars["String"]>;
  phoneNumberExtension?: Maybe<Scalars["String"]>;
  facebookName?: Maybe<Scalars["String"]>;
  facebookUrl?: Maybe<Scalars["String"]>;
  order?: Maybe<Scalars["Int"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsNameUrlArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsEmailArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsPhoneNumberArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsPhoneNumberExtensionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsFacebookNameArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsFacebookUrlArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/resourcesAndContacts) */
export type GraphQLContentfulResourcesAndContactsOrderArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulResourcesAndContactsCollection = {
  __typename?: "ResourcesAndContactsCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulResourcesAndContacts>>;
};

export type GraphQLContentfulResourcesAndContactsDescription = {
  __typename?: "ResourcesAndContactsDescription";
  json: Scalars["JSON"];
  links: GraphQLContentfulResourcesAndContactsDescriptionLinks;
};

export type GraphQLContentfulResourcesAndContactsDescriptionAssets = {
  __typename?: "ResourcesAndContactsDescriptionAssets";
  hyperlink: Array<Maybe<GraphQLContentfulAsset>>;
  block: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulResourcesAndContactsDescriptionEntries = {
  __typename?: "ResourcesAndContactsDescriptionEntries";
  inline: Array<Maybe<GraphQLContentfulEntry>>;
  hyperlink: Array<Maybe<GraphQLContentfulEntry>>;
  block: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulResourcesAndContactsDescriptionLinks = {
  __typename?: "ResourcesAndContactsDescriptionLinks";
  entries: GraphQLContentfulResourcesAndContactsDescriptionEntries;
  assets: GraphQLContentfulResourcesAndContactsDescriptionAssets;
  resources: GraphQLContentfulResourcesAndContactsDescriptionResources;
};

export type GraphQLContentfulResourcesAndContactsDescriptionResources = {
  __typename?: "ResourcesAndContactsDescriptionResources";
  block: Array<GraphQLContentfulResourceLink>;
  inline: Array<GraphQLContentfulResourceLink>;
  hyperlink: Array<GraphQLContentfulResourceLink>;
};

export type GraphQLContentfulResourcesAndContactsFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  name_exists?: InputMaybe<Scalars["Boolean"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_not?: InputMaybe<Scalars["String"]>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  name_contains?: InputMaybe<Scalars["String"]>;
  name_not_contains?: InputMaybe<Scalars["String"]>;
  nameUrl_exists?: InputMaybe<Scalars["Boolean"]>;
  nameUrl?: InputMaybe<Scalars["String"]>;
  nameUrl_not?: InputMaybe<Scalars["String"]>;
  nameUrl_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  nameUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  nameUrl_contains?: InputMaybe<Scalars["String"]>;
  nameUrl_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  email_exists?: InputMaybe<Scalars["Boolean"]>;
  email?: InputMaybe<Scalars["String"]>;
  email_not?: InputMaybe<Scalars["String"]>;
  email_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  email_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  email_contains?: InputMaybe<Scalars["String"]>;
  email_not_contains?: InputMaybe<Scalars["String"]>;
  phoneNumber_exists?: InputMaybe<Scalars["Boolean"]>;
  phoneNumber?: InputMaybe<Scalars["String"]>;
  phoneNumber_not?: InputMaybe<Scalars["String"]>;
  phoneNumber_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  phoneNumber_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  phoneNumber_contains?: InputMaybe<Scalars["String"]>;
  phoneNumber_not_contains?: InputMaybe<Scalars["String"]>;
  phoneNumberExtension_exists?: InputMaybe<Scalars["Boolean"]>;
  phoneNumberExtension?: InputMaybe<Scalars["String"]>;
  phoneNumberExtension_not?: InputMaybe<Scalars["String"]>;
  phoneNumberExtension_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  phoneNumberExtension_not_in?: InputMaybe<
    Array<InputMaybe<Scalars["String"]>>
  >;
  phoneNumberExtension_contains?: InputMaybe<Scalars["String"]>;
  phoneNumberExtension_not_contains?: InputMaybe<Scalars["String"]>;
  facebookName_exists?: InputMaybe<Scalars["Boolean"]>;
  facebookName?: InputMaybe<Scalars["String"]>;
  facebookName_not?: InputMaybe<Scalars["String"]>;
  facebookName_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  facebookName_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  facebookName_contains?: InputMaybe<Scalars["String"]>;
  facebookName_not_contains?: InputMaybe<Scalars["String"]>;
  facebookUrl_exists?: InputMaybe<Scalars["Boolean"]>;
  facebookUrl?: InputMaybe<Scalars["String"]>;
  facebookUrl_not?: InputMaybe<Scalars["String"]>;
  facebookUrl_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  facebookUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  facebookUrl_contains?: InputMaybe<Scalars["String"]>;
  facebookUrl_not_contains?: InputMaybe<Scalars["String"]>;
  order_exists?: InputMaybe<Scalars["Boolean"]>;
  order?: InputMaybe<Scalars["Int"]>;
  order_not?: InputMaybe<Scalars["Int"]>;
  order_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_not_in?: InputMaybe<Array<InputMaybe<Scalars["Int"]>>>;
  order_gt?: InputMaybe<Scalars["Int"]>;
  order_gte?: InputMaybe<Scalars["Int"]>;
  order_lt?: InputMaybe<Scalars["Int"]>;
  order_lte?: InputMaybe<Scalars["Int"]>;
  OR?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulResourcesAndContactsFilter>>
  >;
  AND?: InputMaybe<
    Array<InputMaybe<GraphQLContentfulResourcesAndContactsFilter>>
  >;
};

export type GraphQLContentfulResourcesAndContactsLinkingCollections = {
  __typename?: "ResourcesAndContactsLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulResourcesAndContactsLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulResourcesAndContactsOrder =
  | "name_ASC"
  | "name_DESC"
  | "nameUrl_ASC"
  | "nameUrl_DESC"
  | "email_ASC"
  | "email_DESC"
  | "phoneNumber_ASC"
  | "phoneNumber_DESC"
  | "phoneNumberExtension_ASC"
  | "phoneNumberExtension_DESC"
  | "facebookName_ASC"
  | "facebookName_DESC"
  | "facebookUrl_ASC"
  | "facebookUrl_DESC"
  | "order_ASC"
  | "order_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnly = GraphQLContentfulEntry & {
  __typename?: "RichTextOnly";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulRichTextOnlyLinkingCollections>;
  title?: Maybe<Scalars["String"]>;
  path?: Maybe<Scalars["String"]>;
  description?: Maybe<GraphQLContentfulRichTextOnlyDescription>;
  seoDescription?: Maybe<Scalars["String"]>;
  showStartButton?: Maybe<Scalars["Boolean"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlyLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlyTitleArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlyPathArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlyDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlySeoDescriptionArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

/** [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/richTextOnly) */
export type GraphQLContentfulRichTextOnlyShowStartButtonArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulRichTextOnlyCollection = {
  __typename?: "RichTextOnlyCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulRichTextOnly>>;
};

export type GraphQLContentfulRichTextOnlyDescription = {
  __typename?: "RichTextOnlyDescription";
  json: Scalars["JSON"];
  links: GraphQLContentfulRichTextOnlyDescriptionLinks;
};

export type GraphQLContentfulRichTextOnlyDescriptionAssets = {
  __typename?: "RichTextOnlyDescriptionAssets";
  hyperlink: Array<Maybe<GraphQLContentfulAsset>>;
  block: Array<Maybe<GraphQLContentfulAsset>>;
};

export type GraphQLContentfulRichTextOnlyDescriptionEntries = {
  __typename?: "RichTextOnlyDescriptionEntries";
  inline: Array<Maybe<GraphQLContentfulEntry>>;
  hyperlink: Array<Maybe<GraphQLContentfulEntry>>;
  block: Array<Maybe<GraphQLContentfulEntry>>;
};

export type GraphQLContentfulRichTextOnlyDescriptionLinks = {
  __typename?: "RichTextOnlyDescriptionLinks";
  entries: GraphQLContentfulRichTextOnlyDescriptionEntries;
  assets: GraphQLContentfulRichTextOnlyDescriptionAssets;
  resources: GraphQLContentfulRichTextOnlyDescriptionResources;
};

export type GraphQLContentfulRichTextOnlyDescriptionResources = {
  __typename?: "RichTextOnlyDescriptionResources";
  block: Array<GraphQLContentfulResourceLink>;
  inline: Array<GraphQLContentfulResourceLink>;
  hyperlink: Array<GraphQLContentfulResourceLink>;
};

export type GraphQLContentfulRichTextOnlyFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  title_exists?: InputMaybe<Scalars["Boolean"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_not?: InputMaybe<Scalars["String"]>;
  title_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  title_contains?: InputMaybe<Scalars["String"]>;
  title_not_contains?: InputMaybe<Scalars["String"]>;
  path_exists?: InputMaybe<Scalars["Boolean"]>;
  path?: InputMaybe<Scalars["String"]>;
  path_not?: InputMaybe<Scalars["String"]>;
  path_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  path_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  path_contains?: InputMaybe<Scalars["String"]>;
  path_not_contains?: InputMaybe<Scalars["String"]>;
  description_exists?: InputMaybe<Scalars["Boolean"]>;
  description_contains?: InputMaybe<Scalars["String"]>;
  description_not_contains?: InputMaybe<Scalars["String"]>;
  seoDescription_exists?: InputMaybe<Scalars["Boolean"]>;
  seoDescription?: InputMaybe<Scalars["String"]>;
  seoDescription_not?: InputMaybe<Scalars["String"]>;
  seoDescription_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  seoDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  seoDescription_contains?: InputMaybe<Scalars["String"]>;
  seoDescription_not_contains?: InputMaybe<Scalars["String"]>;
  showStartButton_exists?: InputMaybe<Scalars["Boolean"]>;
  showStartButton?: InputMaybe<Scalars["Boolean"]>;
  showStartButton_not?: InputMaybe<Scalars["Boolean"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulRichTextOnlyFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulRichTextOnlyFilter>>>;
};

export type GraphQLContentfulRichTextOnlyLinkingCollections = {
  __typename?: "RichTextOnlyLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulRichTextOnlyLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulRichTextOnlyOrder =
  | "title_ASC"
  | "title_DESC"
  | "path_ASC"
  | "path_DESC"
  | "showStartButton_ASC"
  | "showStartButton_DESC"
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentfulSys = {
  __typename?: "Sys";
  id: Scalars["String"];
  spaceId: Scalars["String"];
  environmentId: Scalars["String"];
  publishedAt?: Maybe<Scalars["DateTime"]>;
  firstPublishedAt?: Maybe<Scalars["DateTime"]>;
  publishedVersion?: Maybe<Scalars["Int"]>;
};

export type GraphQLContentfulSysFilter = {
  id_exists?: InputMaybe<Scalars["Boolean"]>;
  id?: InputMaybe<Scalars["String"]>;
  id_not?: InputMaybe<Scalars["String"]>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  id_contains?: InputMaybe<Scalars["String"]>;
  id_not_contains?: InputMaybe<Scalars["String"]>;
  publishedAt_exists?: InputMaybe<Scalars["Boolean"]>;
  publishedAt?: InputMaybe<Scalars["DateTime"]>;
  publishedAt_not?: InputMaybe<Scalars["DateTime"]>;
  publishedAt_in?: InputMaybe<Array<InputMaybe<Scalars["DateTime"]>>>;
  publishedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars["DateTime"]>>>;
  publishedAt_gt?: InputMaybe<Scalars["DateTime"]>;
  publishedAt_gte?: InputMaybe<Scalars["DateTime"]>;
  publishedAt_lt?: InputMaybe<Scalars["DateTime"]>;
  publishedAt_lte?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_exists?: InputMaybe<Scalars["Boolean"]>;
  firstPublishedAt?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_not?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_in?: InputMaybe<Array<InputMaybe<Scalars["DateTime"]>>>;
  firstPublishedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars["DateTime"]>>>;
  firstPublishedAt_gt?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_gte?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_lt?: InputMaybe<Scalars["DateTime"]>;
  firstPublishedAt_lte?: InputMaybe<Scalars["DateTime"]>;
  publishedVersion_exists?: InputMaybe<Scalars["Boolean"]>;
  publishedVersion?: InputMaybe<Scalars["Float"]>;
  publishedVersion_not?: InputMaybe<Scalars["Float"]>;
  publishedVersion_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  publishedVersion_not_in?: InputMaybe<Array<InputMaybe<Scalars["Float"]>>>;
  publishedVersion_gt?: InputMaybe<Scalars["Float"]>;
  publishedVersion_gte?: InputMaybe<Scalars["Float"]>;
  publishedVersion_lt?: InputMaybe<Scalars["Float"]>;
  publishedVersion_lte?: InputMaybe<Scalars["Float"]>;
};

/** Allows for embeds [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/text) */
export type GraphQLContentfulText = GraphQLContentfulEntry & {
  __typename?: "Text";
  sys: GraphQLContentfulSys;
  contentfulMetadata: GraphQLContentfulContentfulMetadata;
  linkedFrom?: Maybe<GraphQLContentfulTextLinkingCollections>;
  text?: Maybe<Scalars["String"]>;
};

/** Allows for embeds [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/text) */
export type GraphQLContentfulTextLinkedFromArgs = {
  allowedLocales?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

/** Allows for embeds [See type definition](https://app.contentful.com/spaces/56c95v53ajrr/content_types/text) */
export type GraphQLContentfulTextTextArgs = {
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulTextCollection = {
  __typename?: "TextCollection";
  total: Scalars["Int"];
  skip: Scalars["Int"];
  limit: Scalars["Int"];
  items: Array<Maybe<GraphQLContentfulText>>;
};

export type GraphQLContentfulTextFilter = {
  sys?: InputMaybe<GraphQLContentfulSysFilter>;
  contentfulMetadata?: InputMaybe<GraphQLContentfulContentfulMetadataFilter>;
  text_exists?: InputMaybe<Scalars["Boolean"]>;
  text?: InputMaybe<Scalars["String"]>;
  text_not?: InputMaybe<Scalars["String"]>;
  text_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  text_not_in?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  text_contains?: InputMaybe<Scalars["String"]>;
  text_not_contains?: InputMaybe<Scalars["String"]>;
  OR?: InputMaybe<Array<InputMaybe<GraphQLContentfulTextFilter>>>;
  AND?: InputMaybe<Array<InputMaybe<GraphQLContentfulTextFilter>>>;
};

export type GraphQLContentfulTextLinkingCollections = {
  __typename?: "TextLinkingCollections";
  entryCollection?: Maybe<GraphQLContentfulEntryCollection>;
};

export type GraphQLContentfulTextLinkingCollectionsEntryCollectionArgs = {
  skip?: InputMaybe<Scalars["Int"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  preview?: InputMaybe<Scalars["Boolean"]>;
  locale?: InputMaybe<Scalars["String"]>;
};

export type GraphQLContentfulTextOrder =
  | "sys_id_ASC"
  | "sys_id_DESC"
  | "sys_publishedAt_ASC"
  | "sys_publishedAt_DESC"
  | "sys_firstPublishedAt_ASC"
  | "sys_firstPublishedAt_DESC"
  | "sys_publishedVersion_ASC"
  | "sys_publishedVersion_DESC";

export type GraphQLContentful_Node = {
  _id: Scalars["ID"];
};

export type GraphQLContentfulAllBlogPostsQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulAllBlogPostsQuery = {
  __typename?: "Query";
  blogPostCollection?: {
    __typename?: "BlogPostCollection";
    items: Array<{ __typename: "BlogPost"; path?: string }>;
  };
};

export type GraphQLContentfulBlogPostPageQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulBlogPostPageQuery = {
  __typename?: "Query";
  pinnedPosts?: {
    __typename?: "BlogPostCollection";
    items: Array<{
      __typename?: "BlogPost";
      title?: string;
      path?: string;
      author?: string;
      tags?: Array<string>;
      externalUrl?: string;
      seoDescription?: string;
      image?: { __typename?: "Asset"; url?: string; description?: string };
      richDescription?: { __typename?: "BlogPostDescription"; json: any };
      sys: { __typename?: "Sys"; firstPublishedAt?: any; id: string };
      country?: {
        title: string;
        slug: string;
      };
      state?: {
        title: string;
        slug: string;
      };
      city?: {
        name: string;
        slug: string;
      };
    }>;
  };
  recentPosts?: {
    __typename?: "BlogPostCollection";
    items: Array<{
      __typename?: "BlogPost";
      title?: string;
      path?: string;
      author?: string;
      tags?: Array<string>;
      externalUrl?: string;
      seoDescription?: string;
      image?: { __typename?: "Asset"; url?: string; description?: string };
      richDescription?: { __typename?: "BlogPostDescription"; json: any };
      sys: { __typename?: "Sys"; firstPublishedAt?: any; id: string };
      country?: {
        title: string;
        slug: string;
      };
      state?: {
        title: string;
        slug: string;
      };
      city?: {
        name: string;
        slug: string;
      };
    }>;
  };
};

export type GraphQLContentfulBlogPostFromPathQueryVariables = Exact<{
  path?: InputMaybe<Scalars["String"]>;
}>;

export type GraphQLContentfulBlogPostFromPathQuery = {
  __typename?: "Query";
  blogPostCollection?: {
    __typename?: "BlogPostCollection";
    items: Array<{
      __typename?: "BlogPost";
      title?: string;
      path?: string;
      author?: string;
      tags?: Array<string>;
      externalUrl?: string;
      seoDescription?: string;
      image?: { __typename?: "Asset"; url?: string; description?: string };
      richDescription?: { __typename?: "BlogPostDescription"; json: any };
      sys: { __typename?: "Sys"; firstPublishedAt?: any };
    }>;
  };
};

export type GraphQLContentfulAvailableCitiesQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulAvailableCitiesQuery = {
  __typename?: "Query";
  cityCollection?: {
    __typename?: "CityCollection";
    items: Array<{
      __typename?: "City";
      sys: {
        id: string;
      };
      name?: string;
      biasLat?: number;
      biasLong?: number;
      biasRadius?: number;
      slug: string;
      landlords?: {
        __typename?: "CityLandlordsCollection";
        items: Array<
          | { __typename?: "BlogPost" }
          | { __typename?: "City" }
          | { __typename?: "DidYouKnow" }
          | { __typename?: "LandingExplanation" }
          | { __typename?: "LandingFact" }
          | { __typename?: "LandingMetadata" }
          | { __typename?: "Landlord"; name?: string }
          | { __typename?: "OfferingExampleViolation" }
          | { __typename?: "RelevantArticle" }
          | { __typename?: "ResourcesAndContacts" }
          | { __typename?: "RichTextOnly" }
          | { __typename?: "Text" }
        >;
      };
    }>;
  };
};

export type GraphQLContentfulAvailableCountriesQuery = {
  __typename?: "Query";
  countryCollection?: {
    __typename?: "CountryCollection";
    items: Array<{
      __typename?: "Country";
      title?: string;
      sys: {
        id: string;
      };
      slug: string;
      states: {
        __typename?: "StatesCollection";
        items: Array<{
          __typename?: "State";
          title: string;
          sys: {
            id: string;
          };
          slug: string;
          cities: {
            __typename?: "CitiesCollection";
            items: Array<{
              __typename?: "City";
              sys: {
                id: string;
              };
              name: string;
              slug: string;
            }>;
          };
        }>;
      };
      cities: {
        __typename?: "CitiesCollection";
        items: Array<{
          __typename?: "City";
          sys: {
            id: string;
          };
          name: string;
          slug: string;
        }>;
      };
    }>;
  };
};

export type GraphQLContentfulAvailableStatesQuery = {
  __typename?: "Query";
  stateCollection?: {
    __typename?: "StateCollection";
    items: Array<{
      __typename?: "State";
      title?: string;
      sys: {
        id: string;
      };
      slug: string;
      cities: {
        __typename?: "CitiesCollection";
        items: Array<{
          __typename?: "City";
          sys: {
            id: string;
          };
          name: string;
          slug: string;
        }>;
      };
    }>;
  };
};

export type GraphQLContentfulAvailableCitiesWithRulesQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulAvailableCitiesWithRulesQuery = {
  __typename?: "Query";
  cityCollection?: {
    __typename?: "CityCollection";
    items: Array<{
      __typename?: "City";
      name?: string;
      questions?: any;
      bylawMultiplexer?: any;
    }>;
  };
};

export type GraphQLContentfulLandingPageContentQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulLandingPageContentQuery = {
  __typename?: "Query";
  entryCollection?: {
    __typename?: "EntryCollection";
    items: Array<
      | { __typename: "BlogPost" }
      | { __typename: "City" }
      | {
          __typename: "DidYouKnow";
          title?: string;
          description?: string;
          sourceName?: string;
          sourceUrl?: string;
          order?: number;
        }
      | {
          __typename: "LandingExplanation";
          icon?: string;
          order?: number;
          richDescription?: {
            __typename?: "LandingExplanationDescription";
            json: any;
          };
        }
      | {
          __typename: "LandingFact";
          title?: string;
          description?: string;
          order?: number;
          lightTextColor?: boolean;
          backgroundImage?: { __typename?: "Asset"; url?: string };
        }
      | {
          __typename: "LandingMetadata";
          title?: string;
          buttonStartNow?: string;
          whyThisToolTitle?: string;
          howWeHelpTitle?: string;
          didYouKnowTitle?: string;
          kitchenIntro?: string;
          articleTitle?: string;
          richDescription?: {
            __typename?: "LandingMetadataDescription";
            json: any;
          };
        }
      | { __typename: "Landlord" }
      | {
          __typename: "OfferingExampleViolation";
          title?: string;
          description?: string;
          violationReason?: string;
          order?: number;
          markerLeftPosition?: number;
          markerTopPosition?: number;
        }
      | {
          __typename: "RelevantArticle";
          title?: string;
          sourceUrl?: string;
          sourceName?: string;
          order?: number;
        }
      | { __typename: "ResourcesAndContacts" }
      | { __typename: "RichTextOnly" }
      | { __typename: "Text" }
    >;
  };
};

export type GraphQLContentfulResourcesPageContentQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulResourcesPageContentQuery = {
  __typename?: "Query";
  resourcesAndContactsCollection?: {
    __typename?: "ResourcesAndContactsCollection";
    items: Array<{
      __typename: "ResourcesAndContacts";
      name?: string;
      nameUrl?: string;
      email?: string;
      phoneNumber?: string;
      phoneNumberExtension?: string;
      facebookName?: string;
      facebookUrl?: string;
      order?: number;
      richDescription?: {
        __typename?: "ResourcesAndContactsDescription";
        json: any;
      };
      city?: { __typename?: "City"; name?: string; slug: string };
      state?: { __typename?: "State"; title?: string; slug: string };
      country?: { __typename?: "Country"; title?: string; slug: string };
      sys: {
        id: string;
      };
    }>;
  };
};

export type GraphQLContentfulAllRichTextPagesQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GraphQLContentfulAllRichTextPagesQuery = {
  __typename?: "Query";
  richTextOnlyCollection?: {
    __typename?: "RichTextOnlyCollection";
    items: Array<{ __typename: "RichTextOnly"; path?: string }>;
  };
};

export type GraphQLContentfulRichTextPageQueryVariables = Exact<{
  path?: InputMaybe<Scalars["String"]>;
}>;

export type GraphQLContentfulRichTextPageQuery = {
  __typename?: "Query";
  richTextOnlyCollection?: {
    __typename?: "RichTextOnlyCollection";
    items: Array<{
      __typename: "RichTextOnly";
      title?: string;
      seoDescription?: string;
      showStartButton?: boolean;
      richDescription?: { __typename?: "RichTextOnlyDescription"; json: any };
    }>;
  };
};
